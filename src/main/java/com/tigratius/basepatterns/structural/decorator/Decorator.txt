Шаблон: Декоратор (Decorator)

========================================================================================================================
Цель:

Динамическое добавление новых обязангостей объекту.

========================================================================================================================
Для чего используется:

Используется в качестве альтернативы порождению подклассов для расширения функциональности.

========================================================================================================================
Пример использования:

-динамическое и понятное клиентам добавления обязанностей объектам;
-реализация обязанностей, которые могут быть сняты с объекта;
-расширение класса путем порождения подклссов невозможно по каким-либо причинам.

========================================================================================================================